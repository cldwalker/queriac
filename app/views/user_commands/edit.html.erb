<h1 class="inline">Edit User Command</h1>

<ul class="options header">
	<li class="search"><%= link_to 'Show this User Command', public_user_command_path(@user_command) %></li>
	<% unless @user_command.owned_by?(current_user) %>
	<li class="add"><%= link_to 'Subscribe', subscribe_user_command_path(@user_command) %></li>
	<% end %>
	<li class="delete"><%= link_to 'Delete', user_command_path(@user_command), :confirm => "Are you sure you want to delete this command?",
	:method=>:delete %>
	</li>
</ul>


<hr />


<%= error_messages_for :user_command %>

<% form_for(:user_command, :url => user_command_path(@user_command), :html => { :method => :put }) do |f| %>

	<%= render :partial => "form", :locals => {:f => f} %>
	
	<% if admin? %>
		<div class="floatkiller">
			<h3>Admin Only: Command Fields to Update</h3>
			<p style="font-size: 11px">
				When you own a command, this is used to control which fields are updated to the command	object (Defaults to all). 
				When you don't own a command, this allows you to selectively act as the command creator. For commands with options, url
				and url options	should be toggled together unless you understand why not to.
			</p>
			<%= link_to_function "Check All", "check_all_for_selector('.command_fields')"%> |
			<%= link_to_function "Uncheck All", "uncheck_all_for_selector('.command_fields')"%><br/>
			<% checkbox_state = @user_command.command_owned_by?(current_user)%>
			<% UserCommand::COMMAND_UPDATE_FIELDS.each do |c| %>
				<% id = "command_field_#{c}"%>
				<%= check_box_tag "command_fields[]", c, checkbox_state, :id=>id, :class=>'command_fields' %>
				<%= label_tag id, c %>
			<% end %>
		</div>
	<% end %>

  <div class="floatkiller">
    <%= submit_tag "Save Changes", :class => "submit" %>
  </div>
<% end %>