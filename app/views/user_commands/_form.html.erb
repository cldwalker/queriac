<% if controller.action_name == 'copy' %>
	<%= hidden_field_tag 'user_command[command_id]', @command_id, :id=>'user_command_command_id' %>
	<%= hidden_field_tag 'is_copy', 1 %>
	<div style="font-size: 12px">
		Since you are copying an existing command, certain fields cannot be edited ie url.
	</div>
<% end %>
<% @disabled_fields ||= [] %>

<div class="floater">
  <%= f.label :name %><br />
  <%= f.text_field :name, :size => 50  %>
</div>

<div class="floater">
  <%= f.label :keyword %><br />
  <%= f.text_field :keyword, :size => 14 %>
</div>

<div class="floatkiller">
	<% if ! @user_command.new_record? %>
		Url status: <%= url_status @user_command %>
		<br/>
	<% end %>
  <% label_string = "URL or Javascript Command. (Don't forget to include the protocol: http, https, javascript, etc..)" %>
  <%= f.label :url, label_string %><br />
  <%= f.text_field :url, {:size => 90, :disabled=>@disabled_fields.include?(:url)} %>
  <%= f.hidden_field :url if @disabled_fields.include?(:url) %>
</div>

<div id="url_options_instructions">
	<% if @user_command.new_record? || @user_command.command_owned_by?(current_user)%>
		To create an option, you need to specify it in the url with format [:option_name].<br/>
		For example, an option named type is defined in this url: http://cowpie.com?type=[:type]&q=(q). 
		<%= link_to "Learn more ...", static_page_path('options_tutorial') %>
	<% else %>
		<%= link_to "Learn more about url options ...", static_page_path('options_tutorial') %>
	<% end %>
</div>
<% is_hidden = params[:expand] ? false : true %>
<h3 style="margin-top: 5px">Url options:
	<%= collapser_for "url_options", :autohide => is_hidden, :label => "Hide" %>
	<%= expander_for "url_options", :autohide =>!is_hidden, :label => "Show" %>
</h3>
<div id="url_options" style="<%= 'display:none;' if is_hidden %> margin-left: 20px">

	<% if @user_command.new_record? || @user_command.command_owned_by?(current_user) || current_user.is_admin? %>
		<% sync_params = @user_command.new_record? ? {} : {:user_command=>@user_command.id} %>
		<%= link_to_remote "SYNCHRONIZE OPTIONS WITH URL", 
			{:url=>sync_url_options_user_commands_path(sync_params), :before=>"$('sync_spinner').show()", 
				:complete=>"$('sync_spinner').hide()",
				:with => %['user_command_url=' + escape($('user_command_url').value)]}, :style=>'font-size: 12px'
		%>
		 - Do this if you have modified the url. NOTE: any new input you have entered in the options will be erased.<br/>
		<%= ajax_spinner 'sync' %>
	<% end %>
	
	<div id="user_command_options">
		<%= render :partial=>'options', :locals=>{:options=>@user_command.ordered_url_options}%>
	</div>
</div>


<div class="floatkiller">
  <%= f.label :description, "Description (If command is complex, please provide an explanation of it and a sample query)" %><br />
  <%= f.text_area :description, :cols => 100, :rows => 12  %>
</div>

<div>
	<label for="tags">Tags (separated by spaces)</label><br />
	
	<% 
		if params[:tags]
			tag_list = params[:tags]
		else
			tag_list = @user_command.tag_string
		end
	%>
	
  <%= text_field_tag :tags, tag_list, {:size => 90} %><br/>
  <p>
  Your tags: <span style="font-style:italic">
  <%= truncate_with_more current_user.tags.map(&:name).uniq.sort.join(", "), 100, :tag_type=>'span' %></span>
  </p>
</div>

	
<h3 style="margin-bottom: 0px">COMMAND OPTIONS</h3>
<div id="command_options_instructions">
<% if @user_command.new_record? && @controller.action_name != 'copy' %>
	* Once a command is public and is used by more than one person it must remain public.
<% elsif ! @user_command.new_record? && @user_command.command_owned_by?(current_user) %>
	* As the creator of this command, the public, http post and url encode options are updated for both the command and your user command.<br/>
	<% unless @user_command.command_editable? %>
	* Since the command is public and being used by other people, you can't edit the public state of the command.<br/>
	  You can always create a separate private version of the command by copying the command fields.
	<% end %>
<% end %>
</div>

<% unless @disabled_fields.include?(:public) %>
	<div class="floater">
	  <%= f.check_box :public %> <%= f.label :public, "Share this command with the public" %>
	</div>
<% end %>

<div class="floater">
  <%= f.check_box :public_queries %> <%= f.label :public_queries, "Share my queries", :id => "command_public_queries_label" %>
</div>

<div class="floater">
  <%= f.check_box :http_post %> <%= f.label :http_post, "Use HTTP POST" %>
</div>

<div class="floater">
  <%= f.check_box :url_encode %> <%= f.label :url_encode, "Use URL Encoding" %>
</div>